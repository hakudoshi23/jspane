{"version":3,"sources":["/src/jspane.js"],"names":["createAnchor","onAnchorMouseDown","anchor","document","createElement","className","addEventListener","updateAnchorFeedback","delta","anchorTreshhold","style","backgroundColor","runCallback","callback","extend","properties","defaults","p","hasOwnProperty","value","defaultOptions","container","events","onPaneCreate","onPaneResized","onPaneDestroy","Pane","options","createPane","pane","self","append","event","current","target","this","containerId","querySelector","separator","rootPane","setPaneDimensions","b","getBoundingClientRect","position","left","width","top","height","pageX","pageY","dataset","JSON","stringify","parse","prototype","dimensions","dimensionsAsString","getPaneDimensions","window"],"mappings":"CAAA,WACA,YAgHA,SAAAA,GAAAC,GACA,GAAAC,GAAAC,SAAAC,cAAA,MAGA,OAFAF,GAAAG,UAAA,cACAH,EAAAI,iBAAA,YAAAL,GACAC,EAGA,QAAAK,GAAAL,EAAAM,GACAA,EAAA,GAAAC,gBACAP,EAAAQ,MAAAC,gBAAA,UACAH,EAAA,IAAAC,gBACAP,EAAAQ,MAAAC,gBAAA,UACAH,EAAA,GAAAC,gBACAP,EAAAQ,MAAAC,gBAAA,UACAH,EAAA,IAAAC,gBACAP,EAAAQ,MAAAC,gBAAA,UAEAT,EAAAQ,MAAAC,gBAAA,GAIA,QAAAC,GAAAC,GACAA,GAAAA,IAGA,QAAAC,GAAAC,EAAAC,GACAD,EAAAA,KACA,KAAA,GAAAE,KAAAD,GACA,GAAAA,EAAAE,eAAAD,KAAAF,EAAAE,GAAA,CACA,GAAAE,GAAAH,EAAAC,EACA,iBAAAE,GACAL,EAAAC,EAAAE,GAAAD,EAAAC,IAEAF,EAAAE,GAAAD,EAAAC,GAEA,MAAAF,GAjJA,GAAAK,IACAC,UAAA,UACAC,QACAC,aAAA,KACAC,cAAA,KACAC,cAAA,OAIAC,EAAA,SAAAC,GAoDA,QAAAC,KACA,GAAAC,GAAA1B,SAAAC,cAAA,MAIA,OAHAyB,GAAAxB,UAAA,OACAO,EAAAkB,EAAAH,QAAAL,OAAAC,cACAM,EAAAE,OAAA/B,EAAAC,IACA4B,EAGA,QAAA5B,GAAA+B,GACAF,EAAAG,QAAA/B,OAAA8B,EAAAE,OA5DA,GAAAJ,GAAAK,IAEAA,MAAAR,QAAAb,EAAAM,EAAAO,EAEA,IAAAS,GAAAD,KAAAR,QAAAN,SACAc,MAAAd,UAAAlB,SAAAkC,cAAAD,GAEAD,KAAAF,SACAK,UAAA,KACApC,OAAA,KAGA,IAAAqC,GAAAX,GACAO,MAAAK,kBAAAD,GAAA,IAAA,MACAJ,KAAAd,UAAAU,OAAAQ,GAEApC,SAAAG,iBAAA,YAAA,SAAA0B,GACA,GAAAF,EAAAG,QAAA/B,OAAA,CACA,GAAAA,GAAA4B,EAAAG,QAAA/B,OAEAuC,EAAAvC,EAAAwC,wBACAC,GAAAF,EAAAG,KAAAH,EAAAI,MAAA,EAAAJ,EAAAK,IAAAL,EAAAM,OAAA,GAEAvC,GAAAmC,EAAA,GAAAX,EAAAgB,MAAAL,EAAA,GAAAX,EAAAiB,MACA/C,GAAAgD,QAAA1C,MAAA2C,KAAAC,UAAA5C,GACAD,EAAAL,EAAAM,MAIAL,SAAAG,iBAAA,YAAA,SAAA0B,GACA,GAAAF,EAAAG,QAAAK,UACA,CAAAR,EAAAG,QAAAK,aAUAnC,SAAAG,iBAAA,UAAA,SAAA0B,GAEA,GADAF,EAAAG,QAAAK,YAAAR,EAAAG,QAAAK,UAAA,MACAR,EAAAG,QAAA/B,OAAA,CACA,GAAAA,GAAA4B,EAAAG,QAAA/B,MACAiD,MAAAE,MAAAnD,EAAAgD,QAAA1C,MAEAsB,GAAAG,QAAA/B,OAAA,QAqCAwB,GAAA4B,UAAAd,kBAAA,SAAAX,EAAA0B,GACA,GAAAC,GAAAL,KAAAC,UAAAG,EACA1B,GAAAqB,QAAAK,WAAAC,GAQA9B,EAAA4B,UAAAG,kBAAA,SAAA5B,GACA,MAAAsB,MAAAE,MAAAxB,EAAAqB,QAAAK,aAGAG,OAAAhC,KAAAA","file":"jspane.min.js","sourcesContent":["(function () {\r\n  'use strict';\r\n\r\n  var defaultOptions = {\r\n    container: '#jspane',\r\n    events: {\r\n      onPaneCreate: null,\r\n      onPaneResized: null,\r\n      onPaneDestroy: null,\r\n    }\r\n  };\r\n\r\n  var Pane = function (options) {\r\n    var self = this;\r\n\r\n    this.options = extend(defaultOptions, options);\r\n\r\n    var containerId = this.options.container;\r\n    this.container = document.querySelector(containerId);\r\n\r\n    this.current = {\r\n      separator: null,\r\n      anchor: null\r\n    };\r\n\r\n    var rootPane = createPane();\r\n    this.setPaneDimensions(rootPane, [100, 100]);\r\n    this.container.append(rootPane);\r\n\r\n    document.addEventListener('mousemove', function (event) {\r\n      if (self.current.anchor) {\r\n        var anchor = self.current.anchor;\r\n\r\n        var b = anchor.getBoundingClientRect();\r\n        var position = [b.left + (b.width / 2), b.top + (b.height / 2)];\r\n\r\n        var delta = [position[0] - event.pageX, position[1] - event.pageY];\r\n        anchor.dataset.delta = JSON.stringify(delta);\r\n        updateAnchorFeedback(anchor, delta);\r\n      }\r\n    });\r\n\r\n    document.addEventListener('mousemove', function (event) {\r\n      if (self.current.separator) {\r\n        var sep = self.current.separator;\r\n\r\n        //TODO: get separator group\r\n        //TODO: get resizing axis for group\r\n        //TODO: calculate delta for given axis\r\n        //TODO: update position for pane 1\r\n        //TODO: update position for pane 2\r\n      }\r\n    });\r\n\r\n    document.addEventListener('mouseup', function (event) {\r\n      if (self.current.separator) self.current.separator = null;\r\n      if (self.current.anchor) {\r\n        var anchor = self.current.anchor\r\n        var delta = JSON.parse(anchor.dataset.delta);\r\n        //TODO: if-else to choose action (split | merge)\r\n        self.current.anchor = null;\r\n      }\r\n    });\r\n\r\n    function createPane () {\r\n      var pane = document.createElement('div');\r\n      pane.className = 'pane';\r\n      runCallback(self.options.events.onPaneCreate);\r\n      pane.append(createAnchor(onAnchorMouseDown));\r\n      return pane;\r\n    }\r\n\r\n    function onAnchorMouseDown (event) {\r\n      self.current.anchor = event.target;\r\n    }\r\n\r\n    function createSeparator (pane1, pane2, size) {\r\n      var separator = document.createElement('div');\r\n      var group = pane1.parent('.pane-group');\r\n      separator[group.data('styleProperty')](size);\r\n      separator.addEventListener('mousedown', onSeparatorMouseDown);\r\n      separator.className ='pane-separator';\r\n      separator.data('pane1', pane1);\r\n      separator.data('pane2', pane2);\r\n      var arrow = group.data('styleProperty') === 'width' ? 'ew' : 'ns';\r\n      separator.style.cursor = arrow + '-resize';\r\n      group.insertBefore(separator, pane2);\r\n      return element;\r\n    }\r\n\r\n    function onSeparatorMouseDown (event) {\r\n      self.current.separator = event.target;\r\n      event.target.dataset.startX = event.pageX;\r\n      event.target.dataset.startY = event.pageY;\r\n    }\r\n  };\r\n\r\n  Pane.prototype.setPaneDimensions = function (pane, dimensions) {\r\n    var dimensionsAsString = JSON.stringify(dimensions);\r\n    pane.dataset.dimensions = dimensionsAsString;\r\n    //TODO: get pane group\r\n    //TODO: get group resizing axis\r\n    //TODO: get separators of group\r\n    //TODO: get separators accumulated size\r\n    //TODO: update actual dimensions of pane calc(50% - 5px)\r\n  };\r\n\r\n  Pane.prototype.getPaneDimensions = function (pane) {\r\n    return JSON.parse(pane.dataset.dimensions);\r\n  };\r\n\r\n  window.Pane = Pane;\r\n\r\n  function createAnchor (onAnchorMouseDown) {\r\n    var anchor = document.createElement('div');\r\n    anchor.className = 'pane-anchor';\r\n    anchor.addEventListener('mousedown', onAnchorMouseDown);\r\n    return anchor;\r\n  }\r\n\r\n  function updateAnchorFeedback (anchor, delta) {\r\n    if (delta[0] > anchorTreshhold) {\r\n        anchor.style.backgroundColor = '#000000';\r\n    } else if (delta[0] < -anchorTreshhold) {\r\n        anchor.style.backgroundColor = '#FF0000';\r\n    } else if (delta[1] > anchorTreshhold) {\r\n        anchor.style.backgroundColor = '#00FF00';\r\n    } else if (delta[1] < -anchorTreshhold) {\r\n        anchor.style.backgroundColor = '#0000FF';\r\n    } else {\r\n        anchor.style.backgroundColor = '';\r\n    }\r\n  }\r\n\r\n  function runCallback (callback) {\r\n    if (callback) callback();\r\n  }\r\n\r\n  function extend (properties, defaults) {\r\n    properties = properties || {};\r\n    for (var p in defaults)\r\n      if (defaults.hasOwnProperty(p) && !properties[p]) {\r\n          var value = defaults[p];\r\n          if (typeof value === 'object')\r\n              extend(properties[p], defaults[p]);\r\n          else\r\n              properties[p] = defaults[p];\r\n      }\r\n    return properties;\r\n  }\r\n})();\r\n"]}